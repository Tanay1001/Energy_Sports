#include <iostream>
#include <string>

using namespace std;

class Adidas
{
	public:
        string cricketProducts[16] = {"Small Sized Bat","Medium Sized Bat","Big Sized Bat","Pad - Small Size", "Pad - Medium Size", "Pad - Size Big","Wicket Keeper Gloves","Batsman Gloves", "Jersey 1","Custom Jersey", "Guard", "Small Shoes", "Medium Shoes", "Big Shoes","Junior Kit", "Kit"};
        int cricketPrice[16] = {749,1499,2999,699,1049,2549,1549,1599,775,1449,119,1779,3899,6999,4590,6999};
        string bats[3] =  {"Small Sized Bat","Medium Sized Bat","Big Sized Bat"};
        int batPrice[3] = {749,1499,2999};
		string pads[3] = {"Pad - Small Size", "Pad - Medium Size", "Pad - Size Big"};
		int padPrice[3] = {699, 1049, 2549};
		string wkGloves[1] = {"Wicket Keeper Gloves"};
		int wkGlovePrice[1] = {1549};
		string gloves[1] = {"Batsman Gloves"};
		int glovePrice[1] = {1599};
		string cricketJerseys[2] = {"Jersey 1", "Custom Jersey"};
		int cricketJerseyPrice[2] = {775,1449};
		string guard[1] = {"Guard"};
		int guardPrice[1] = {119};
        string cricketShoes[3] = {"Small Shoes", "Medium Shoes", "Big Shoes"};
		int cricketShoePrice[3] = {1779,3899,6999};
		string kit[2] = {"Junior Kit", "Kit"};
        int kitPrice[2] = {4590,6999};

		string basketballProducts[9] = {"Ball - Size 5", "Ball - Size 6", "Ball - Size 7", "Volume 1", "Volume 2", "Volume 3","Jersey 1", "Jersey 2", "Jersey 3"};
		int basketballPrice[9] = {749, 1080, 1499, 3599, 5499, 4799, 1999, 1999, 1289};
		string basketBall[3] = {"Ball - Size 5", "Ball - Size 6", "Ball - Size 7"};
		int basketBallPrice[3] = {749, 1080, 1499};
		string basketballShoes[3] = {"Volume 1", "Volume 2", "Volume 3"};
		int basketballShoePrice[3] = {3599, 5499, 4799};
		string basketballJerseys[3] = {"Jersey 1", "Jersey 2", "Jersey 3"};
		int basketballJerseyPrice[3] = {1999, 1999, 1289};

		string footballProducts[12] = {"Ball - Size 3", "Ball - Size 4", "Ball - Size 5", "Medium Shoes", "Big Shoes", "Stockings 1", "Stockings 2","Player Jersey 1", "Player Jersey 2", "Goal Keeper Jersey", "Goalkeeper Gloves", "Shin Pads"};
		int footballPrice[12] = {1599, 1799, 2799,2499, 3599, 399, 599, 1799, 1999, 1959, 2999, 799};
        string footBall[3] = {"Ball - Size 3", "Ball - Size 4", "Ball - Size 5"};
		int footBallPrice[3] = {1599, 1799, 2799};
		string footballShoes[2] = {"Medium Shoes", "Big Shoes"};
		int footballShoePrice[2] = {2499, 3599};
		string stockings[2] = {"Stockings 1", "Stockings 2"};
		int stockingPrice[2] = {399, 599};
		string footballJerseys[3] = {"Player Jersey 1", "Player Jersey 2", "Goal Keeper Jersey"};
		int footballJerseyPrice[3] = {1799, 1999, 1959};
		string gkGloves[1] = {"Goalkeeper Gloves"};
        int gkGlovePrice[1] = {2999};
		string shinPads[1] = {"Shin Pads"};
        int shinPadPrice[1] = {799};

		string swimmingProducts[4] = {"Swimming Costume 1", "Swimming Costume 2", "Swimming Cap", "Swimming Goggles"};
		int swimmingPrice[4] = {649, 1749, 299, 499};
		string swimmingCostumes[2] = {"Swimming Costume 1", "Swimming Costume 2"};
		int swimmingCostumePrice[2] = {649, 1749};
		string swimmingCap[1] = {"Swimming Cap"};
        int swimmingCapPrice[1] = {299};
		string swimmingGoggles[1] = {"Swimming Goggles"};
        int swimmingGogglePrice[1] = {499};
};

class Nike
{
	public:
        string cricketProducts[8] = {"Small Sized Bat","Medium Sized Bat","Big Sized Bat","Batsman Gloves", "Jersey", "Small Shoes", "Medium Shoes", "Big Shoes"};
        int cricketPrice[8] = {849,1649,3249,1699,1999,2099,3899, 6499};
        string bats[3] =  {"Small Sized Bat","Medium Sized Bat","Big Sized Bat"};
        int batPrice[3] = {849,1649,3249};
        string gloves[1] = {"Batsman Gloves"};
        int glovePrice[1] = {1699};
        string cricketJerseys[1] = {"Jersey"};
		int cricketJerseyPrice[1] = {1999};
		string cricketShoes[3] = {"Small Shoes", "Medium Shoes", "Big Shoes"};
		int cricketShoePrice[3] = {2099,3899,6499};

        string basketballProducts[7] = {"Ball - Size 5", "Ball - Size 6", "Ball - Size 7","Volume 1", "Volume 2", "Jersey 1", "Jersey 2"};
		int basketballPrice[7] = {799, 999, 1299, 3995, 7995, 1298, 1695};
		string basketBall[3] = {"Ball - Size 5", "Ball - Size 6", "Ball - Size 7"};
		int basketBallPrice[3] = {799, 999, 1299};
		string basketballShoes[2] = {"Volume 1", "Volume 2"};
		int basketballShoePrice[2] = {3995, 7995};
		string basketballJerseys[3] = {"Jersey 1", "Jersey 2"};
		int basketballJerseyPrice[3] = {1289, 1695};

		string footballProducts[12] = {"Ball - Size 3", "Ball - Size 4", "Ball - Size 5", "Medium Shoes", "Big Shoes", "Stockings 1", "Stockings 2","Player Jersey 1", "Player Jersey 2", "Goal Keeper Jersey", "Goalkeeper Gloves", "Shin Pads"};
		int footballPrice[12] = {1799, 1999, 2999,2699, 3799, 599, 799, 1999, 2199, 2159, 3199, 999};
        string footBall[3] = {"Ball - Size 3", "Ball - Size 4", "Ball - Size 5"};
		int footBallPrice[3] = {1799, 1999, 2999};
		string footballShoes[2] = {"Medium Shoes", "Big Shoes"};
		int footballShoePrice[2] = {2699, 3799};
		string stockings[2] = {"Stockings 1", "Stockings 2"};
		int stockingPrice[2] = {599, 799};
		string footballJerseys[3] = {"Player Jersey 1", "Player Jersey 2", "Goal Keeper Jersey"};
		int footballJerseyPrice[3] = {1999, 2199, 2159};
		string gkGloves[1] = {"Goalkeeper Gloves"};
        int gkGlovePrice[1] = {3199};
		string shinPads[1] = {"Shin Pads"};
        int shinPadPrice[1] = {999};

		string swimmingProducts[4] = {"Swimming Costume 1", "Swimming Costume 2", "Swimming Cap", "Swimming Goggles"};
		int swimmingPrice[4] = {849, 1949, 399, 699};
		string swimmingCostumes[2] = {"Swimming Costume 1", "Swimming Costume 2"};
		int swimmingCostumePrice[2] = {849, 1949};
		string swimmingCap[1] = {"Swimming Cap"};
        int swimmingCapPrice[1] = {399};
		string swimmingGoggles[1] = {"Swimming Goggles"};
        int swimmingGogglePrice[1] = {699};
};

class Puma
{
  public:
        string cricketProducts[18] = {"Small Sized Bat","Medium Sized Bat","Big Sized Bat","Season Ball","Pad - Small Size","Pad - Medium Sized","Pad - Big Size","Wicket Keeper Gloves 1","Wicket Keeper Gloves 2","Batsman Gloves 1","Batsman Gloves 2","Jersey", "Guard", "Small Shoes", "Medium Shoes", "Big Shoes","Junior Kit", "Kit"};
        int cricketPrice[18] = {799,1549,3099,499,599,1029,2499,1299,1899,799,1199, 649, 149, 1999, 3999, 5499,4119,5999};
        string bats[3] =  {"Small Sized Bat","Medium Sized Bat","Big Sized Bat"};
        int batPrice[3] = {799,1549,3099};
        string cricketBalls[1] = {"Season Ball"};
		int cricketBallPrice[1] = {499};
		string pads[3] = {"Pad - Small Size", "Pad - Medium Sized", "Pad - Big Size"};
		int padPrice[3] = {599, 1029, 2499};
        string wkGloves[2] = {"Wicket Keeper Gloves 1","Wicket Keeper Gloves 2"};
        int wkGlovePrice[2] = {1299, 1899};
        string gloves[2] = {"Batsman Gloves 1","Batsman Gloves 2"};
        int glovePrice[2] = {799, 1199};
		string cricketJerseys[1] = {"Jersey"};
		int cricketJerseyPrice[1] = {649};
		string guard[1] = {"Guard"};
		int guardPrice[1] = {149};
		string cricketShoes[3] = {"Small Shoes", "Medium Shoes", "Big Shoes"};
		int cricketShoePrice[3] = {1999, 3999, 5499};
        string kit[2] = {"Junior Kit", "Kit"};
        int kitPrice[2] = {4119,5999};

		string basketballProducts[5] = {"Volume 1", "Volume 2", "Jersey 1", "Jersey 2", "Jersey 3"};
		int basketballPrice[5] = {3299, 5499, 699, 749, 1339};
        string basketballShoes[2] = {"Volume 1", "Volume 2"};
		int basketballShoePrice[2] = {3299, 5499};
		string basketballJerseys[3] = {"Jersey 1", "Jersey 2", "Jersey 3"};
		int basketballJerseyPrice[3] = {699, 749, 1339};

		string footballProducts[9] = {"Ball - Size 3", "Ball - Size 4", "Ball - Size 5", "Medium Shoes", "Big Shoes", "Stockings 1", "Stockings 2", "Goalkeeper Gloves", "Shin Pads"};
		int footballPrice[9] = {1599, 1799, 2799, 2499, 3599, 399, 599, 2999, 699};
        string footBall[3] = {"Ball - Size 3", "Ball - Size 4", "Ball - Size 5"};
		int footBallPrice[3] = {1599, 1799, 2799};
		string footballShoes[2] = {"Medium Shoes", "Big Shoes"};
		int footballShoePrice[2] = {2499, 3599};
		string stockings[2] = {"Stockings 1", "Stockings 2"};
		int stockingPrice[2] = {399, 599};
		string gkGloves[1] = {"Goalkeeper Gloves"};
        int gkGlovePrice[1] = {2999};
		string shinPads[1] = {"Shin Pads"};
        int shinPadPrice[1] = {699};
};

class NewBalance
{
	public:
        string cricketProducts[11] = {"Small Sized Bat","Medium Sized Bat","Big Sized Bat","Pad - Small Size","Pad - Medium Sized","Pad - Big Size","Wicket Keeper Gloves","Batsman Gloves","Jersey","Big Shoe","Kit"};
        int cricketPrice[11] = {769,1699,3999,749,1299,2749,1499,1799,759,5699};
        string bats[3] =  {"Small Sized Bat","Medium Sized Bat","Big Sized Bat"};
        int batPrice[3] = {769,1699,3999};
        string pads[3] = {"Pad - Small Size", "Pad - Medium Sized", "Pad - Big Size"};
        int padPrice[3] = {749, 1299, 2749};
        string wkGloves[1] = {"Wicket Keeper Gloves"};
        int wkGlovePrice[1] = {1499};
        string gloves[1] = {"Batsman Gloves"};
        int glovePrice[1] = {1799};
        string cricketJerseys[1] = {"Jersey"};
		int cricketJerseyPrice[1] = {759};
		string cricketShoes[1] = {"Big Shoes"};
		int cricketShoePrice[1] = {5699};
        string kit[1] = {"Kit"};
        int kitPrice[1] = {6599};
};

class Reebok
{
	public:
        string cricketProducts[9] = {"Small Sized Bat","Medium Sized Bat","Big Sized Bat","Pad - Small Size","Pad - Medium Sized","Pad - Big Size", "Small Shoes", "Medium Shoes", "Big Shoes"};
        int cricketPrice[9] = {699,1199,2899,659,1499,2699, 1599,3199,5799};
        string bats[3] =  {"Small Sized Bat","Medium Sized Bat","Big Sized Bat"};
        int batPrice[3] = {699,1199,2899};
        string pads[3] = {"Pad - Small Sizes", "Pad - Medium Sizeds", "Pad - Big Sizes"};
        int padPrice[3] = {659, 1499, 2699};
		string cricketShoes[3] = {"Small Shoes", "Medium Shoes", "Big Shoes"};
		int cricketShoePrice[3] = {1599,3199,5799};

		string basketballProducts[3] = {"Ball - Size 7", "Volume 2", "Volume 3"};
		int basketballPrice[3] = {1359, 6599, 9999};
		string basketBall[1] = {"Ball - Size 7"};
		int basketBallPrice[1] = {1359};
		string basketballShoes[2] = {"Volume 2", "Volume 3"};
		int basketballShoePrice[2] = {6599, 9999};

		string footballProducts[6] = {"Ball - Size 5", "Medium Shoes", "Big Shoes", "Stockings 1", "Stockings 2", "Goalkeeper Gloves"};
		int footballPrice[6] = {2499, 2499, 2999, 299, 559, 2499};
        string footBall[1] = {"Ball - Size 5"};
		int footBallPrice[1] = {2499};
		string footballShoes[2] = {"Medium Shoes", "Big Shoes"};
		int footballShoePrice[2] = {2499, 2999};
		string stockings[2] = {"Stockings 1", "Stockings 2"};
		int stockingPrice[2] = {299, 559};
		string gkGloves[1] = {"Goalkeeper Gloves"};
        int gkGlovePrice[1] = {2499};
};

class SunridgeS
{
	public:
        string cricketProducts[16] = {"Small Sized Bat","Medium Sized Bat","Big Sized Bat","Season Ball","Pad - Small Size","Pad - Medium Sized","Pad - Big Size","Wicket Keeper Gloves","Batsman Gloves 1","Batsman Gloves 2","Batsman Gloves 3", "Jersey", "Guard","Small Shoes", "Junior Kit", "Kit"};
        int cricketPrice[16] = {779,1599,3149,399,639,1199,2599,1999,490,1499,2049,799,199,1979, 4290,6899};
        string bats[3] =  {"Small Sized Bat","Medium Sized Bat","Big Sized Bat"};
        int batPrice[3] = {779,1599,3149};
        string cricketBalls[1] = {"Season Ball"};
        int cricketBallPrice[1] = {399};
        string pads[3] = {"Pad - Small Size", "Pad - Medium Sized", "Pad - Big Size"};
        int padPrice[3] = {639, 1199, 2599};
        string wkGloves[1] = {"Wicket Keeper Gloves"};
        int wkGlovePrice[1] = {1999};
        string gloves[3]= {"Batsman Gloves 1","Batsman Gloves 2", "Batsman Gloves 3"};
        int glovePrice[3] = {490, 1499, 2049};
        string cricketJerseys[1] = {"Jersey"};
        int cricketJerseyPrice[1] = {799};
        string guard[1] = {"Guard"};
        int guardPrice[1] = {199};
        string cricketShoes[1] = {"Small Shoes"};
        int cricketShoePrice[1] = {1979};
        string kit[2] = {"Junior Kit", "Kit"};
        int kitPrice[2] = {4290,6899};
};

class UnderArmour
{
	public:
		string basketballProducts[7] = {"Ball - Size 5", "Ball - Size 6", "Ball - Size 7", "Volume 4", "Volume 5", "Jersey 1", "Jersey 2"};
		int basketballPrice[7] = {999, 1299, 1799, 6798, 9999, 1482, 1464};
		string basketBall[3] = {"Ball - Size 5", "Ball - Size 6", "Ball - Size 7"};
		int basketBallPrice[3] = {999, 1299, 1799};
		string basketballShoes[2] = {"Volume 4", "Volume 5"};
		int basketballShoePrice[2] = {6798, 9999};
		string basketballJerseys[2] = {"Jersey 1", "Jersey 2"};
		int basketballJerseyPrice[2] = {1482, 1464};
};

class Spalding
{
	public:
		string basketballProducts[6] = {"Ball - Size 5", "Ball - Size 6", "Ball - Size 7", "Volume 1", "Jersey 1", "Jersey 2"};
		int basketballPrice[6] = {499, 999, 1275, 1699, 1599, 1679};
		string basketBall[3] = {"Ball - Size 5", "Ball - Size 6", "Ball - Size 7"};
		int basketBallPrice[3] = {499, 999, 1275};
		string basketballShoes[1] = {"Volume 1"};
		int basketballShoePrice[1] = {1699};
		string basketballJerseys[2] = {"Jersey 1", "Jersey 2"};
		int basketballJerseyPrice[2] = {1599, 1679};
};

class Speedo
{
  public:
		string swimmingProducts[4] = {"Swimming Costume 1", "Swimming Costume 2", "Swimming Cap", "Swimming Goggles"};
		int swimmingPrice[4] = {699, 1799, 349, 549};
		string swimmingCostumes[2] = {"Swimming Costume 1", "Swimming Costume 2"};
		int swimmingCostumePrice[2] = {699, 1799};
		string swimmingCap[1] = {"Swimming Cap"};
        int swimmingCapPrice[1] = {349};
		string swimmingGoggles[1] = {"Swimming Goggles"};
        int swimmingGogglePrice[1] = {549};
};

class Butterfly
{
  public:
        string tableTennisProducts[5] = {"Racket 1","Racket 2","Table","Balls(Pack of 6)", "Set(2 Rackets and 1 ball)"};
        int tableTennisPrice[5] = {999, 1299, 28499, 349, 1049};
        string rackets[2] = {"Racket 1", "Racket 2"};
        int racketPrice[2] = {999,1299};
        string table[1] = {"Table"};
        int tablePrice[1] = {28499};
        string balls[1] = {"Balls(Pack of 6)"};
        int ballPrice[1] = {349};
        string Set[1] = {"Set(2 Rackets and 1 ball)"};
        int setPrice[1] = {1049};
};

class Stiga
{
  public:
        string tableTennisProducts[5] = {"Racket 1", "Racket 2", "Table", "Balls(Pack Of 6)", "Set(2 Rackets and 2 Balls"};
        int tableTennisPrice[5] = {899, 1059,249, 25499, 999};
        string rackets[2] = {"Racket 1", "Racket 2"};
        int racketPrice[2] = {899,1059};
        string balls[1] = {"Balls(Pack of 6)"};
        int ballPrice[1]= {249};
        string table[1] = {"Table"};
        int tablePrice[1] = {25499};
        string Set[1] = {"Set(2 Rackets and 2 Balls)"};
        int setPrice[1] = {999};

};

class Artengo
{
	public:
		string tableTennisProducts[5] = {"Racket 1", "Racket 2", "Table", "Balls(Pack of 6)", "Set(2 Rackets and 2 Balls)"};
		int tableTennisPrice[5] = {699, 1199, 27499, 150, 750};
		string rackets[2] = {"Racket 1", "Racket 2"};
		int racketPrice[2] = {699, 1199};
		string table[1] = {"Table"};
		int tablePrice[1] = {27499};
		string balls[1] = {"Balls(Pack of 6)"};
		int ballPrice[1] = {150};
		string Set[1] = {"Set(2 Rackets and 2 Balls)"};
		int setPrice[1] = {750};

};

class Yonex
{
  public:
        string badmintonProducts[5] = {"Racket 1", "Racket 2", "Racket 3", "Shuttle Cock(Pack of 6)", "Set(2 Rackets and 3 Shuttle Cocks)"};
        int badmintonPrice[5] = {1299, 1999, 2999, 419, 3999};
        string rackets[3] = {"Racket 1", "Racket 2", "Racket 3"};
        int racketPrice[3] = {1299, 1999, 2999};
        string shuttle[1] = {"Shuttle Cock(Pack of 6)"};
        int shuttlePrice[1] = {419};
        string Set[1] = {"Set(2 Rackets and 3 Shuttle Cocks)"};
        int setPrice[1] = {3999};
};

class Lining
{
  public:
        string badmintonProducts[5] = {"Racket 1", "Racket 2", "Racket 3", "Shuttle Cock(Pack of 6)", "Set(2 Rackets and 2 Shuttle Cocks)"};
        int badmintonPrice[5] = {1299, 1799, 2499, 359, 2799};
        string rackets[3] = {"Racket 1", "Racket 2", "Racket 3"};
        int racketPrice[3] = {1299, 1799, 2499};
        string shuttle[1] = {"Shuttle Cock(Pack of 6)"};
        int shuttlePrice[1] = {359};
        string Set[1] = {"Set(2 Rackets and 2 Shuttle Cocks)"};
        int setPrice[1] = {2799};
};

class Fleet
{
  public:
        string badmintonProducts[5] = {"Racket 1", "Racket 2", "Racket 3", "Shuttle Cock(Pack of 6)", "Set(2 Rackets and 3 Shuttle Cocks)"};
        int badmintonPrice[5] = {1199, 1899, 2899, 319, 3499};
        string rackets[3] = {"Racket 1", "Racket 2", "Racket 3"};
        int racketPrice[3] = {1199, 1899, 2899};
        string shuttle[1] = {"Shuttle Cock(Pack of 6)"};
        int shuttlePrice[1] = {319};
        string Set[1] = {"Set(2 Rackets and 3 Shuttle Cocks)"};
        int setPrice[1] = {3499};
};

class Customer
{
public:
	// Data members
	int totalCost, itemCounter;
	string order;
	string name, email, mobno;
	char gender;

	// Constructor
	Customer()
	{
	    totalCost = 0;
	    order = "";
	    itemCounter = 1;
		cout << "Welcome to ENER-G SPORTS!" << endl;
		cout << "\nPlease enter a few details to continue...\n" << endl;
		cout << "Name: ";
		fflush(stdin);
		getline(cin, name);
		cout << "Gender(M/F): ";
		cin >> gender;
		cout << "Mobile number: ";
		fflush(stdin);
		getline(cin, mobno);
		cout << "Email ID: ";
		fflush(stdin);
		getline(cin, email);
	}

	//Operations
	void displayProducts(string S[], int p[], int n)
	{
        int i;
        for(i = 0; i<n; ++i)
        {
            cout << (i+1) << ". " << S[i] << "\t Rs." << p[i] << endl;
        }
	}

	//Functions
	void cricket();
	void football();
	void basketball();
	void tt();
	void badminton();
	void swimming();

	void mainMenu()
	{
		int ch;
		mainMenu:
		cout << "\n***MAIN MENU***" << endl;
		cout << "\nWhich sport are you shopping for?" << endl;
		cout << "1. Cricket\n2. Football\n3. Basketball\n4. Table Tennis\n5.Badminton\n6. Swimming"<< endl;
		cout << "Enter your choice: ";
		cin >> ch;
		if (cin.fail())
		{
			cin.clear();
			cin.ignore(200, '\n');
			cout << "\nPlease enter a number!" << endl;
			goto mainMenu;
		}

		switch (ch)
		{
            case 1:
                cricket();
            break;
            case 2:
               // football();
            break;
            case 3:
                basketball();
            break;
            case 4:
                tt();
            break;
            case 5:
                badminton();
            break;
            case 6:
                swimming();
            break;
            default:
                cout << "\nInvalid choice!" << endl;
                goto mainMenu;
            break;
		}
	}
};

void Customer::cricket()
{
	int ch1, ch2, ch3, pos, i, quantity;
	Adidas adidas;
	Nike nike;
	Puma puma;
	NewBalance newbalance;
	Reebok reebok;
	SunridgeS ss;

	main :

	cout << "\nWhat are you looking for?" << endl;
	cout << "1. Bats\n2. Balls\n3. Pads\n4. Batsman Gloves\n5. Wicket Keeper Gloves\n6. Jersey\n7. Guard\n8. Shoes\n9. Kit" << endl;
	fflush(stdin);
	cout << "Enter your choice: ";
	cin >> ch1;
	if (cin.fail())
	{
		cin.clear();
		cin.ignore(200, '\n');
		cout << "\nPlease enter a number!" << endl;
		goto main;
	}

	switch (ch1)
	{
        case 1:
            cout << "\nBrands offering bats are:" << endl;
            cout << "1. Adidas\n2. Nike\n3. Puma\n4. New Balance\n5. SunridgeS\n6. Reebok" << endl;
            batBrands:
            cout << "\nYour brand choice: ";
            fflush(stdin);
            cin >> ch2;
            if (cin.fail())
            {
                cin.clear();
                cin.ignore(200, '\n');
                cout << "\nPlease enter a number!" << endl;
                goto batBrands;
            }

            switch (ch2)
            {
                case 1:
                    cout << "\nChoose your bat:\n" << endl;
                    displayProducts(adidas.bats, adidas.batPrice, 3);
                    fflush(stdin);
                    batsAdidas:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto batsAdidas;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto batsAdidas;
                    }
                    quantityAdidas:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto quantityAdidas;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto quantityAdidas;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + adidas.bats[ch3-1] + "\t\(Adidas\)\t Rs." + to_string(adidas.batPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(adidas.batPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (adidas.batPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 2:
                    cout << "\nChoose your bat:\n" << endl;
                    displayProducts(nike.bats, nike.batPrice, 3);
                    fflush(stdin);
                    batsNike:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto batsNike;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto batsNike;
                    }
                    quantityNike:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto quantityNike;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto quantityNike;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + nike.bats[ch3-1] + "\t\(Nike\)\t Rs." + to_string(nike.batPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(nike.batPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (nike.batPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 3:
                    cout << "\nChoose your bat:\n" << endl;
                    displayProducts(puma.bats, puma.batPrice, 3);
                    fflush(stdin);
                    batsPuma:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto batsPuma;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto batsPuma;
                    }
                    quantityPuma:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto quantityPuma;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto quantityPuma;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + puma.bats[ch3-1] + "\t\(Puma\)\t Rs." + to_string(puma.batPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(puma.batPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (puma.batPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 4:
                    cout << "\nChoose your bat:\n" << endl;
                    displayProducts(newbalance.bats, newbalance.batPrice, 3);
                    fflush(stdin);
                    batsNewBalance:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto batsNewBalance;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto batsNewBalance;
                    }
                    quantityNewBalance:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto quantityNewBalance;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto quantityNewBalance;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + newbalance.bats[ch3-1] + "\t\(New Balance\)\t Rs." + to_string(newbalance.batPrice[ch3-1]) + "\t" +
                        to_string(quantity) + "\t Rs." + to_string(puma.batPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (newbalance.batPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 5:
                    cout << "\nChoose your bat:\n" << endl;
                    displayProducts(ss.bats, ss.batPrice, 3);
                    fflush(stdin);
                    batsSS:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto batsSS;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto batsSS;
                    }
                    quantitySS:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto quantitySS;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto quantitySS;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + ss.bats[ch3-1] + "\t\(SunridgeS\)\t Rs." + to_string(ss.batPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(ss.batPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (ss.batPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 6:
                    cout << "\nChoose your bat:\n" << endl;
                    displayProducts(reebok.bats, reebok.batPrice, 3);
                    fflush(stdin);
                    batsReebok:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto batsReebok;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto batsReebok;
                    }
                    quantityReebok:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto quantityReebok;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto quantityReebok;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + reebok.bats[ch3-1] + "\t\(Reebok\)\t Rs." + to_string(reebok.batPrice[ch3-1]) +
                        "\t" + to_string(quantity) + "\t Rs." + to_string(reebok.batPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (reebok.batPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                default:
                    cout << "\nInvalid choice, please choose a brand." << endl;
                    goto batBrands;
                break;
            }
        break;
        case 2:
            cout << "\nBrands offering balls are:" << endl;
            cout << "1. Puma\n2. SunridgeS" << endl;
            ballBrands:
            cout << "\nYour brand choice: ";
            fflush(stdin);
            cin >> ch2;
            if (cin.fail())
            {
                cin.clear();
                cin.ignore(200, '\n');
                cout << "\nPlease enter a number!" << endl;
                goto ballBrands;
            }

            switch (ch2)
            {
                case 1:
                    cout << "\nChoose your ball:\n" << endl;
                    displayProducts(puma.cricketBalls, puma.cricketBallPrice, 1);
                    fflush(stdin);
                    ballsPuma:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto ballsPuma;
                    }
                    if(!(ch3 == 1))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto ballsPuma;
                    }
                    ballQuantityPuma:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto ballQuantityPuma;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto ballQuantityPuma;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + puma.cricketBalls[ch3-1] + "\t\(Puma\)\t Rs." + to_string(puma.cricketBallPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(puma.cricketBallPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (puma.cricketBallPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 2:
                    cout << "\nChoose your ball:\n" << endl;
                    displayProducts(ss.cricketBalls, ss.cricketBallPrice, 1);
                    fflush(stdin);
                    ballsSS:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto ballsSS;
                    }
                    if(!(ch3 == 1))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto ballsSS;
                    }
                    ballQuantitySS:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto ballQuantitySS;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto ballQuantitySS;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + ss.cricketBalls[ch3-1] + "\t\(SunridgeS\)\t Rs." + to_string(ss.cricketBallPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(ss.cricketBallPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (ss.cricketBallPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                default:
                    cout << "\nInvalid choice, please choose a brand." << endl;
                    goto ballBrands;
                break;
            }
        break;
        case 3:
            cout << "\nBrands offering pads are:" << endl;
            cout << "1. Adidas\n2. Puma\n3. New Balance\n4. Reebok\n5. SunridgeS" << endl;
            padBrands:
            cout << "\nYour brand choice: ";
            fflush(stdin);
            cin >> ch2;
            if (cin.fail())
            {
                cin.clear();
                cin.ignore(200, '\n');
                cout << "\nPlease enter a number!" << endl;
                goto ballBrands;
            }

            switch (ch2)
            {
                case 1:
                    cout << "\nChoose your pad:\n" << endl;
                    displayProducts(adidas.pads, adidas.padPrice, 3);
                    fflush(stdin);
                    padsAdidas:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto padsAdidas;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto padsAdidas;
                    }
                    padQuantityAdidas:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto padQuantityAdidas;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto padQuantityAdidas;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + adidas.pads[ch3-1] + "\t\(Adidas\)\t Rs." + to_string(adidas.padPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(adidas.padPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (adidas.padPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 2:
                    cout << "\nChoose your pad:\n" << endl;
                    displayProducts(puma.pads, puma.padPrice, 3);
                    fflush(stdin);
                    padsPuma:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto padsPuma;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto padsPuma;
                    }
                    padQuantityPuma:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto padQuantityPuma;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto padQuantityPuma;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + puma.pads[ch3-1] + "\t\(Puma\)\t Rs." + to_string(puma.padPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(puma.padPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (puma.padPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 3:
                    cout << "\nChoose your pad:\n" << endl;
                    displayProducts(newbalance.pads, newbalance.padPrice, 3);
                    fflush(stdin);
                    padsNB:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto padsNB;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto padsNB;
                    }
                    padQuantityNB:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto padQuantityNB;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto padQuantityNB;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + newbalance.pads[ch3-1] + "\t\(New Balance\)\t Rs." + to_string(newbalance.padPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(newbalance.padPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (newbalance.padPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 4:
                    cout << "\nChoose your pad:\n" << endl;
                    displayProducts(reebok.pads, reebok.padPrice, 3);
                    fflush(stdin);
                    padsReebok:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto padsReebok;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto padsReebok;
                    }
                    padQuantityReebok:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto padQuantityReebok;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto padQuantityReebok;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + reebok.pads[ch3-1] + "\t\(Reebok\)\t Rs." + to_string(reebok.padPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(reebok.padPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (reebok.padPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 5:
                    cout << "\nChoose your pad:\n" << endl;
                    displayProducts(ss.pads, ss.padPrice, 3);
                    fflush(stdin);
                    padsSS:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto padsSS;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto padsSS;
                    }
                    padQuantitySS:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto padQuantitySS;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto padQuantitySS;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + ss.pads[ch3-1] + "\t\(SunridgeS\)\t Rs." + to_string(ss.padPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(ss.padPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (ss.padPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                default:
                    cout << "\nInvalid choice, please choose a brand." << endl;
                    goto padBrands;
                break;
            }
        break;
        case 4:
            cout << "\nBrands offering balls are:" << endl;
            cout << "1. Adidas\n2. Nike\n3. Puma\n4. New Balance\n5. SunridgeS" << endl;
            gloveBrands:
            cout << "\nYour brand choice: ";
            fflush(stdin);
            cin >> ch2;
            if (cin.fail())
            {
                cin.clear();
                cin.ignore(200, '\n');
                cout << "\nPlease enter a number!" << endl;
                goto gloveBrands;
            }

            switch (ch2)
            {
                case 1:
                    cout << "\nChoose your glove:\n" << endl;
                    displayProducts(adidas.gloves, adidas.glovePrice, 1);
                    fflush(stdin);
                    glovesAdidas:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto glovesAdidas;
                    }
                    if(!(ch3 == 1))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto glovesAdidas;
                    }
                    gloveQuantityAdidas:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto gloveQuantityAdidas;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto gloveQuantityAdidas;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + adidas.gloves[ch3-1] + "\t\(Adidas\)\t Rs." + to_string(adidas.glovePrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(adidas.glovePrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (adidas.glovePrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 2:
                    cout << "\nChoose your glove:\n" << endl;
                    displayProducts(nike.gloves, nike.glovePrice, 1);
                    fflush(stdin);
                    glovesNike:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto glovesNike;
                    }
                    if(!(ch3 == 1))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto glovesNike;
                    }
                    gloveQuantityNike:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto gloveQuantityNike;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto gloveQuantityNike;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + nike.gloves[ch3-1] + "\t\(Nike\)\t Rs." + to_string(nike.glovePrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(nike.glovePrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (nike.glovePrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 3:
                    cout << "\nChoose your glove:\n" << endl;
                    displayProducts(puma.gloves, puma.glovePrice, 1);
                    fflush(stdin);
                    glovesPuma:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto glovesPuma;
                    }
                    if(!(ch3 == 1 || ch3 == 2))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto glovesPuma;
                    }
                    gloveQuantityPuma:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto gloveQuantityPuma;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto gloveQuantityPuma;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + puma.gloves[ch3-1] + "\t\(Puma\)\t Rs." + to_string(puma.glovePrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(puma.glovePrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (puma.glovePrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 4:
                    cout << "\nChoose your glove:\n" << endl;
                    displayProducts(newbalance.gloves, newbalance.glovePrice, 1);
                    fflush(stdin);
                    glovesNB:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto glovesNB;
                    }
                    if(!(ch3 == 1))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto glovesNB;
                    }
                    gloveQuantityNB:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto gloveQuantityNB;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto gloveQuantityNB;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + newbalance.gloves[ch3-1] + "\t\(New Balance\)\t Rs." + to_string(newbalance.glovePrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(newbalance.glovePrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (newbalance.glovePrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 5:
                    cout << "\nChoose your glove:\n" << endl;
                    displayProducts(ss.gloves, ss.glovePrice, 1);
                    fflush(stdin);
                    glovesSS:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto glovesSS;
                    }
                    if(!(ch3 >= 1 && ch3 <= 3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto glovesSS;
                    }
                    gloveQuantitySS:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto gloveQuantitySS;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto gloveQuantitySS;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + ss.gloves[ch3-1] + "\t\(SunridgeS\)\t Rs." + to_string(ss.glovePrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(ss.glovePrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (ss.glovePrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                default:
                    cout << "\nInvalid choice, please choose a brand." << endl;
                    goto gloveBrands;
                break;
            }
        break;
        case 5:
            cout << "\nBrands offering balls are:" << endl;
            cout << "1. Adidas\n2. Puma\n3. New Balance\n4. SunridgeS" << endl;
            wkGloveBrands:
            cout << "\nYour brand choice: ";
            fflush(stdin);
            cin >> ch2;
            if (cin.fail())
            {
                cin.clear();
                cin.ignore(200, '\n');
                cout << "\nPlease enter a number!" << endl;
                goto wkGloveBrands;
            }

            switch (ch2)
            {
                case 1:
                    cout << "\nChoose your glove:\n" << endl;
                    displayProducts(adidas.wkGloves, adidas.wkGlovePrice, 1);
                    fflush(stdin);
                    wkGlovesAdidas:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto wkGlovesAdidas;
                    }
                    if(!(ch3 == 1))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto wkGlovesAdidas;
                    }
                    wkGloveQuantityAdidas:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto wkGloveQuantityAdidas;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto wkGloveQuantityAdidas;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + adidas.wkGloves[ch3-1] + "\t\(Adidas\)\t Rs." + to_string(adidas.wkGlovePrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(adidas.wkGlovePrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (adidas.wkGlovePrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 2:
                    cout << "\nChoose your glove:\n" << endl;
                    displayProducts(puma.wkGloves, puma.wkGlovePrice, 1);
                    fflush(stdin);
                    wkGlovesPuma:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto wkGlovesPuma;
                    }
                    if(!(ch3 == 1 || ch3 == 2))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto wkGlovesPuma;
                    }
                    wkGloveQuantityPuma:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto wkGloveQuantityPuma;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto wkGloveQuantityPuma;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + puma.wkGloves[ch3-1] + "\t\(Puma\)\t Rs." + to_string(puma.wkGlovePrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(puma.wkGlovePrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (puma.wkGlovePrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 3:
                    cout << "\nChoose your glove:\n" << endl;
                    displayProducts(newbalance.wkGloves, newbalance.wkGlovePrice, 1);
                    fflush(stdin);
                    wkGlovesNB:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto wkGlovesNB;
                    }
                    if(!(ch3 == 1))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto wkGlovesNB;
                    }
                    wkGloveQuantityNB:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto wkGloveQuantityNB;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto wkGloveQuantityNB;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + newbalance.wkGloves[ch3-1] + "\t\(New Balance\)\t Rs." + to_string(newbalance.wkGlovePrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(newbalance.wkGlovePrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (newbalance.wkGlovePrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 4:
                    cout << "\nChoose your glove:\n" << endl;
                    displayProducts(ss.wkGloves, ss.wkGlovePrice, 1);
                    fflush(stdin);
                    wkGlovesSS:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto wkGlovesSS;
                    }
                    if(!(ch3 == 1))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto wkGlovesSS;
                    }
                    wkGloveQuantitySS:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto wkGloveQuantitySS;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto wkGloveQuantitySS;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + ss.wkGloves[ch3-1] + "\t\(SunridgeS\)\t Rs." + to_string(ss.wkGlovePrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(ss.wkGlovePrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (ss.wkGlovePrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                default:
                    cout << "\nInvalid choice, please choose a brand." << endl;
                    goto wkGloveBrands;
                break;
            }
        break;
        case 6:
            cout << "\nBrands offering jerseys are:" << endl;
            cout << "1. Adidas\n2. Nike\n3. Puma\n4. New Balance\n5. SunridgeS" << endl;
            jerseyBrands:
            cout << "\nYour brand choice: ";
            fflush(stdin);
            cin >> ch2;
            if (cin.fail())
            {
                cin.clear();
                cin.ignore(200, '\n');
                cout << "\nPlease enter a number!" << endl;
                goto jerseyBrands;
            }

            switch (ch2)
            {
                case 1:
                    cout << "\nChoose your jersey:\n" << endl;
                    displayProducts(adidas.cricketJerseys, adidas.cricketJerseyPrice, 2);
                    fflush(stdin);
                    jerseysAdidas:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto jerseysAdidas;
                    }
                    if(!(ch3 == 1 || ch3 == 2))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto jerseysAdidas;
                    }
                    jerseyQuantityAdidas:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto jerseyQuantityAdidas;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto jerseyQuantityAdidas;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + adidas.cricketJerseys[ch3-1] + "\t\(Adidas\)\t Rs." + to_string(adidas.cricketJerseyPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(adidas.cricketJerseyPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (adidas.cricketJerseyPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 2:
                    cout << "\nChoose your jersey:\n" << endl;
                    displayProducts(nike.cricketJerseys, nike.cricketJerseyPrice, 1);
                    fflush(stdin);
                    jerseysNike:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto jerseysNike;
                    }
                    if(!(ch3 == 1))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto jerseysNike;
                    }
                    jerseyQuantityNike:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto jerseyQuantityNike;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto jerseyQuantityNike;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + nike.cricketJerseys[ch3-1] + "\t\(Nike\)\t Rs." + to_string(nike.cricketJerseyPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(nike.cricketJerseyPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (nike.cricketJerseyPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 3:
                    cout << "\nChoose your jersey:\n" << endl;
                    displayProducts(puma.cricketJerseys, puma.cricketJerseyPrice, 1);
                    fflush(stdin);
                    jerseysPuma:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto jerseysPuma;
                    }
                    if(!(ch3 == 1))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto jerseysPuma;
                    }
                    jerseyQuantityPuma:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto jerseyQuantityPuma;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto jerseyQuantityPuma;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + puma.cricketJerseys[ch3-1] + "\t\(Puma\)\t Rs." + to_string(puma.cricketJerseyPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(puma.cricketJerseyPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (puma.cricketJerseyPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 4:
                    cout << "\nChoose your jersey:\n" << endl;
                    displayProducts(newbalance.cricketJerseys, newbalance.cricketJerseyPrice, 1);
                    fflush(stdin);
                    jerseysNB:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto jerseysNB;
                    }
                    if(!(ch3 == 1))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto jerseysNB;
                    }
                    jerseyQuantityNB:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto jerseyQuantityNB;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto jerseyQuantityNB;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + newbalance.cricketJerseys[ch3-1] + "\t\(New Balance\)\t Rs." + to_string(newbalance.cricketJerseyPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(newbalance.cricketJerseyPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (newbalance.cricketJerseyPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 5:
                    cout << "\nChoose your jersey:\n" << endl;
                    displayProducts(ss.cricketJerseys, ss.cricketJerseyPrice, 1);
                    fflush(stdin);
                    jerseysSS:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto jerseysSS;
                    }
                    if(!(ch3 == 1))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto jerseysSS;
                    }
                    jerseyQuantitySS:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto jerseyQuantitySS;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto jerseyQuantitySS;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + ss.cricketJerseys[ch3-1] + "\t\(SunridgeS\)\t Rs." + to_string(ss.cricketJerseyPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(ss.cricketJerseyPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (ss.cricketJerseyPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                default:
                    cout << "\nInvalid choice, please choose a brand." << endl;
                    goto jerseyBrands;
                break;
            }
        break;
        case 7:
            cout << "\nBrands offering guards are:" << endl;
            cout << "1. Adidas\n2. Puma\n3. SunridgeS" << endl;
            guardBrands:
            cout << "\nYour brand choice: ";
            fflush(stdin);
            cin >> ch2;
            if (cin.fail())
            {
                cin.clear();
                cin.ignore(200, '\n');
                cout << "\nPlease enter a number!" << endl;
                goto guardBrands;
            }

            switch (ch2)
            {
                case 1:
                    cout << "\nChoose your guard:\n" << endl;
                    displayProducts(adidas.guard, adidas.guardPrice, 1);
                    fflush(stdin);
                    guardsAdidas:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto guardsAdidas;
                    }
                    if(!(ch3 == 1))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto guardsAdidas;
                    }
                    guardQuantityAdidas:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto guardQuantityAdidas;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto guardQuantityAdidas;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + adidas.guard[ch3-1] + "\t\(Adidas\)\t Rs." + to_string(adidas.guardPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(adidas.guardPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (adidas.guardPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 2:
                    cout << "\nChoose your guard:\n" << endl;
                    displayProducts(puma.guard, puma.guardPrice, 1);
                    fflush(stdin);
                    guardsPuma:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto guardsPuma;
                    }
                    if(!(ch3 == 1))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto guardsPuma;
                    }
                    guardQuantityPuma:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto guardQuantityPuma;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto guardQuantityPuma;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + puma.guard[ch3-1] + "\t\(Puma\)\t Rs." + to_string(puma.guardPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(puma.guardPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (puma.guardPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 3:
                    cout << "\nChoose your guard:\n" << endl;
                    displayProducts(ss.guard, ss.guardPrice, 1);
                    fflush(stdin);
                    guardsSS:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto guardsSS;
                    }
                    if(!(ch3 == 1))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto guardsSS;
                    }
                    guardQuantitySS:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto guardQuantitySS;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto guardQuantitySS;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + ss.guard[ch3-1] + "\t\(SunridgeS\)\t Rs." + to_string(ss.guardPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(ss.guardPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (ss.guardPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                default:
                    cout << "\nInvalid choice, please choose a brand." << endl;
                    goto guardBrands;
                break;
            }
        break;
        case 8:
            cout << "\nBrands offering shoes are:" << endl;
            cout << "1. Adidas\n2. Nike\n3. Puma\n4. New Balance\n5. Reebok\n6. SunridgeS" << endl;
            shoeBrands:
            cout << "\nYour brand choice: ";
            fflush(stdin);
            cin >> ch2;
            if (cin.fail())
            {
                cin.clear();
                cin.ignore(200, '\n');
                cout << "\nPlease enter a number!" << endl;
                goto shoeBrands;
            }

            switch (ch2)
            {
                case 1:
                    cout << "\nChoose your shoes:\n" << endl;
                    displayProducts(adidas.cricketShoes, adidas.cricketShoePrice, 3);
                    fflush(stdin);
                    shoesAdidas:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto shoesAdidas;
                    }
                    if(!(ch3 >= 1 && ch3 <= 3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto shoesAdidas;
                    }
                    shoeQuantityAdidas:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto shoeQuantityAdidas;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto shoeQuantityAdidas;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + adidas.cricketShoes[ch3-1] + "\t\(Adidas\)\t Rs." + to_string(adidas.cricketShoePrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(adidas.cricketShoePrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (adidas.cricketShoePrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 2:
                    cout << "\nChoose your shoes:\n" << endl;
                    displayProducts(nike.cricketShoes, nike.cricketShoePrice, 3);
                    fflush(stdin);
                    shoesNike:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto shoesNike;
                    }
                    if(!(ch3 >= 1 && ch3 <= 3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto shoesNike;
                    }
                    shoeQuantityNike:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto shoeQuantityNike;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto shoeQuantityNike;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + nike.cricketShoes[ch3-1] + "\t\(Nike\)\t Rs." + to_string(nike.cricketShoePrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(nike.cricketShoePrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (nike.cricketShoePrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 3:
                    cout << "\nChoose your shoes:\n" << endl;
                    displayProducts(puma.cricketShoes, puma.cricketShoePrice, 3);
                    fflush(stdin);
                    shoesPuma:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto shoesPuma;
                    }
                    if(!(ch3 >= 1 && ch3 <= 3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto shoesPuma;
                    }
                    shoeQuantityPuma:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto shoeQuantityPuma;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto shoeQuantityPuma;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + puma.cricketShoes[ch3-1] + "\t\(Puma\)\t Rs." + to_string(puma.cricketShoePrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(puma.cricketShoePrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (puma.cricketShoePrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 4:
                    cout << "\nChoose your shoes:\n" << endl;
                    displayProducts(newbalance.cricketShoes, newbalance.cricketShoePrice, 3);
                    fflush(stdin);
                    shoesNB:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto shoesNB;
                    }
                    if(!(ch3 == 1))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto shoesNB;
                    }
                    shoeQuantityNB:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto shoeQuantityNB;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto shoeQuantityNB;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + newbalance.cricketShoes[ch3-1] + "\t\(New Balance\)\t Rs." + to_string(newbalance.cricketShoePrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(newbalance.cricketShoePrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (newbalance.cricketShoePrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 5:
                    cout << "\nChoose your shoes:\n" << endl;
                    displayProducts(reebok.cricketShoes, reebok.cricketShoePrice, 3);
                    fflush(stdin);
                    shoesReebok:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto shoesReebok;
                    }
                    if(!(ch3 >= 1 && ch3 <= 3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto shoesReebok;
                    }
                    shoeQuantityReebok:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto shoeQuantityReebok;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto shoeQuantityReebok;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + reebok.cricketShoes[ch3-1] + "\t\(Reebok\)\t Rs." + to_string(reebok.cricketShoePrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(reebok.cricketShoePrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (reebok.cricketShoePrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 6:
                    cout << "\nChoose your shoes:\n" << endl;
                    displayProducts(ss.cricketShoes, ss.cricketShoePrice, 3);
                    fflush(stdin);
                    shoesSS:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto shoesSS;
                    }
                    if(!(ch3 == 1))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto shoesSS;
                    }
                    shoeQuantitySS:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto shoeQuantitySS;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto shoeQuantitySS;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + ss.cricketShoes[ch3-1] + "\t\(SunridgeS\)\t Rs." + to_string(ss.cricketShoePrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(ss.cricketShoePrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (ss.cricketShoePrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                default:
                    cout << "\nInvalid choice, please choose a brand." << endl;
                    goto shoeBrands;
                break;
            }
        break;
        case 9:
            cout << "\nBrands offering kits are:" << endl;
            cout << "1. Adidas\n2. Puma\n3. New Balance\n4. SunridgeS" << endl;
            kitBrands:
            cout << "\nYour brand choice: ";
            fflush(stdin);
            cin >> ch2;
            if (cin.fail())
            {
                cin.clear();
                cin.ignore(200, '\n');
                cout << "\nPlease enter a number!" << endl;
                goto ballBrands;
            }

            switch (ch2)
            {
                case 1:
                    cout << "\nChoose your kit:\n" << endl;
                    displayProducts(adidas.kit, adidas.kitPrice, 2);
                    fflush(stdin);
                    kitsAdidas:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto kitsAdidas;
                    }
                    if(!(ch3 == 1 || ch3 == 2))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto kitsAdidas;
                    }
                    kitQuantityAdidas:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto kitQuantityAdidas;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto kitQuantityAdidas;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + adidas.kit[ch3-1] + "\t\(Adidas\)\t Rs." + to_string(adidas.kitPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(adidas.kitPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (adidas.kitPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 2:
                    cout << "\nChoose your kit:\n" << endl;
                    displayProducts(puma.kit, puma.kitPrice, 2);
                    fflush(stdin);
                    kitsPuma:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto kitsPuma;
                    }
                    if(!(ch3 == 1 || ch3 == 2))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto kitsPuma;
                    }
                    kitQuantityPuma:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto kitQuantityPuma;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto kitQuantityPuma;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + puma.kit[ch3-1] + "\t\(Puma\)\t Rs." + to_string(puma.kitPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(puma.kitPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (puma.kitPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 3:
                    cout << "\nChoose your kit:\n" << endl;
                    displayProducts(newbalance.kit, newbalance.kitPrice, 1);
                    fflush(stdin);
                    kitsNB:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto kitsNB;
                    }
                    if(!(ch3 == 1))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto kitsNB;
                    }
                    kitQuantityNB:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto kitQuantityNB;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto kitQuantityNB;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + newbalance.kit[ch3-1] + "\t\(New Balance\)\t Rs." + to_string(newbalance.kitPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(newbalance.kitPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (newbalance.kitPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 4:
                    cout << "\nChoose your kit:\n" << endl;
                    displayProducts(ss.kit, ss.kitPrice, 2);
                    fflush(stdin);
                    kitsSS:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto kitsSS;
                    }
                    if(!(ch3 == 1 || ch3 == 2))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto kitsSS;
                    }
                    kitQuantitySS:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto kitQuantitySS;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto kitQuantitySS;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + ss.kit[ch3-1] + "\t\(SunridgeS\)\t Rs." + to_string(ss.kitPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(ss.kitPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (ss.kitPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                default:
                    cout << "\nInvalid choice, please choose a brand." << endl;
                    goto kitBrands;
                break;
            }
        break;
	}
}

void Customer::basketball()
{
    int ch1, ch2, ch3, pos, i, quantity;
	Adidas adidas;
	Nike nike;
	Puma puma;
	Reebok reebok;
	Spalding spalding;
	UnderArmour underarmour;
		main :

	cout << "\nWhat are you looking for?" << endl;
	cout << "1. Balls\n2. Shoes \n3. Jerseys" << endl;
	fflush(stdin);
	cout << "Enter your choice: ";
	cin >> ch1;
	if (cin.fail())
	{
		cin.clear();
		cin.ignore(200, '\n');
		cout << "\nPlease enter a number!" << endl;
		goto main;
	}
	switch(ch1)
	{
    case 1:
        cout << "\nBrands offering balls are:" << endl;
        cout << "1. Adidas \n2. Nike \n3. Reebok \n4. UnderArmour \n5. Spalding" << endl;
        ballBrands:
        cout << "\nYour brand choice: ";
        fflush(stdin);
        cin >> ch2;
        if (cin.fail())
        {
            cin.clear();
            cin.ignore(200, '\n');
            cout << "\nPlease enter a number!" << endl;
            goto ballBrands;
        }
        switch(ch2)
        {
            case 1:
                cout << "\nChoose your ball:\n" << endl;
                    displayProducts(adidas.basketBall, adidas.basketBallPrice, 3);
                    fflush(stdin);
                    ballsAdidas:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto ballsAdidas;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto ballsAdidas;
                    }
                    quantityAdidas:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto quantityAdidas;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto quantityAdidas;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + adidas.basketBall[ch3-1] + "\t\(Adidas\)\t Rs." + to_string(adidas.basketBallPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(adidas.basketBallPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (adidas.basketBallPrice[ch3-1]*quantity);
                        cout << order;
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
            break;

            case 2:
                cout << "\nChoose your ball:\n" << endl;
                    displayProducts(nike.basketBall, nike.basketBallPrice, 3);
                    fflush(stdin);
                    ballsNike:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto ballsNike;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto ballsNike;
                    }
                    quantityNike:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto quantityNike;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto quantityNike;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + nike.basketBall[ch3-1] + "\t\(Nike\)\t Rs." + to_string(nike.basketBallPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(nike.basketBallPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (nike.basketBallPrice[ch3-1]*quantity);
                        cout << order;
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
            break;

            case 3:
                  cout << "\nChoose your ball:\n" << endl;
                    displayProducts(reebok.basketBall, reebok.basketBallPrice, 1);
                    fflush(stdin);
                    ballsReebok:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto ballsReebok;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto ballsReebok;
                    }
                    quantityReebok:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto quantityReebok;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto quantityReebok;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + reebok.basketBall[ch3-1] + "\t\(Reebok\)\t Rs." + to_string(reebok.basketBallPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(reebok.basketBallPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (reebok.basketBallPrice[ch3-1]*quantity);
                        cout << order;
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
            break;

            case 4:
                 cout << "\nChoose your ball:\n" << endl;
                    displayProducts(underarmour.basketBall, underarmour.basketBallPrice, 3);
                    fflush(stdin);
                    ballsUnderArmour:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto ballsUnderArmour;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto ballsUnderArmour;
                    }
                    quantityUnderArmour:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto quantityUnderArmour;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto quantityUnderArmour;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + underarmour.basketBall[ch3-1] + "\t\(Under Armour\)\t Rs." + to_string(underarmour.basketBallPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(underarmour.basketBallPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (underarmour.basketBallPrice[ch3-1]*quantity);
                        cout << order;
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
            break;

            case 5:
                 cout << "\nChoose your ball:\n" << endl;
                    displayProducts(spalding.basketBall, spalding.basketBallPrice, 3);
                    fflush(stdin);
                    ballsSpalding:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto ballsSpalding;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto ballsSpalding;
                    }
                    quantitySpalding:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto quantitySpalding;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto quantitySpalding;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + spalding.basketBall[ch3-1] + "\t\(Spalding\)\t Rs." + to_string(spalding.basketBallPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(spalding.basketBallPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (spalding.basketBallPrice[ch3-1]*quantity);
                        cout << order;
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
            break;
            default:
                cout<<"Please enter a valid Choice"<<endl;
                goto ballBrands;
            break;

        }
    break;

    case 2:
        cout << "\nBrands offering shoes are:" << endl;
        cout << "1. Adidas \n2. Nike \n3. Puma \n4. Reebok \n5. UnderArmour \n6. Spalding" << endl;
        shoeBrands:
        cout << "\nYour brand choice: ";
        fflush(stdin);
        cin >> ch2;
        if (cin.fail())
        {
            cin.clear();
            cin.ignore(200, '\n');
            cout << "\nPlease enter a number!" << endl;
            goto shoeBrands;
        }
        switch(ch2)
        {
            case 1:
                cout << "\nChoose your shoe:\n" << endl;
                    displayProducts(adidas.basketballShoes, adidas.basketballShoePrice, 3);
                    fflush(stdin);
                    shoesAdidas:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto shoesAdidas;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto shoesAdidas;
                    }
                    quantityAdidasShoes:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto quantityAdidasShoes;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto quantityAdidasShoes;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + adidas.basketballShoes[ch3-1] + "\t\(Adidas\)\t Rs." + to_string(adidas.basketballShoePrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(adidas.basketballShoePrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (adidas.basketballShoePrice[ch3-1]*quantity);
                        cout << order;
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
            break;
            case 2:
                cout << "\nChoose your shoe:\n" << endl;
                    displayProducts(nike.basketballShoes, nike.basketballShoePrice, 2);
                    fflush(stdin);
                    shoesNike:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto shoesNike;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto shoesNike;
                    }
                    quantityNikeShoes:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto quantityNikeShoes;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto quantityNikeShoes;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + nike.basketballShoes[ch3-1] + "\t\(Nike\)\t Rs." + to_string(nike.basketballShoePrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(nike.basketballShoePrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (nike.basketballShoePrice[ch3-1]*quantity);
                        cout << order;
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
            break;

            case 3:
                  cout << "\nChoose your shoe:\n" << endl;
                    displayProducts(puma.basketballShoes, puma.basketballShoePrice, 2);
                    fflush(stdin);
                    shoesPuma:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto shoesPuma;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto shoesPuma;
                    }
                    quantityPumaShoes:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto quantityPumaShoes;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto quantityPumaShoes;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + puma.basketballShoes[ch3-1] + "\t\(Puma\)\t Rs." + to_string(puma.basketballShoePrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(puma.basketballShoePrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (puma.basketballShoePrice[ch3-1]*quantity);
                        cout << order;
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
            break;

            case 4:
                cout << "\nChoose your shoe:\n" << endl;
                    displayProducts(reebok.basketballShoes, reebok.basketballShoePrice, 2);
                    fflush(stdin);
                    shoesReebok:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto shoesReebok;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto shoesReebok;
                    }
                    quantityReebokShoes:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto quantityReebokShoes;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto quantityReebokShoes;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + reebok.basketballShoes[ch3-1] + "\t\(Reebok\)\t Rs." + to_string(reebok.basketballShoePrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(reebok.basketballShoePrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (reebok.basketballShoePrice[ch3-1]*quantity);
                        cout << order;
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
            break;

            case 5:
                cout << "\nChoose your shoe:\n" << endl;
                    displayProducts(underarmour.basketballShoes, underarmour.basketballShoePrice, 2);
                    fflush(stdin);
                    shoesUnderArmour:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto shoesUnderArmour;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto shoesUnderArmour;
                    }
                    quantityUnderArmourShoes:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto quantityUnderArmourShoes;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto quantityUnderArmourShoes;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + underarmour.basketballShoes[ch3-1] + "\t\(Under Armour\)\t Rs." + to_string(underarmour.basketballShoePrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(underarmour.basketballShoePrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (underarmour.basketballShoePrice[ch3-1]*quantity);
                        cout << order;
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
            break;

            case 6:
                cout << "\nChoose your shoe:\n" << endl;
                    displayProducts(spalding.basketballShoes, spalding.basketballShoePrice, 1);
                    fflush(stdin);
                    shoesSpalding:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto shoesSpalding;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto shoesSpalding;
                    }
                    quantitySpaldingShoes:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto quantitySpaldingShoes;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto quantitySpaldingShoes;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + spalding.basketballShoes[ch3-1] + "\t\(Spalding\)\t Rs." + to_string(spalding.basketballShoePrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(spalding.basketballShoePrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (spalding.basketballShoePrice[ch3-1]*quantity);
                        cout << order;
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
            break;

            default:
                cout<<"Enter a valid choice: "<<endl;
                goto shoeBrands;
            break;


        }
    break;

    case 3:
         cout << "\nBrands offering Jerseys are:" << endl;
        cout << "1. Adidas \n2. Nike \n3. Puma \n4. UnderArmour \n5. Spalding" << endl;
        jerseyBrands:
        cout << "\nYour brand choice: ";
        fflush(stdin);
        cin >> ch2;
        if (cin.fail())
        {
            cin.clear();
            cin.ignore(200, '\n');
            cout << "\nPlease enter a number!" << endl;
            goto jerseyBrands;
        }
        switch(ch2)
        {
            case 1:
                cout << "\nChoose your Jersey:\n" << endl;
                    displayProducts(adidas.basketballJerseys, adidas.basketballJerseyPrice, 3);
                    fflush(stdin);
                    jerseyAdidas:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto jerseyAdidas;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto jerseyAdidas;
                    }
                    quantityAdidasJersey:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto quantityAdidasJersey;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto quantityAdidasJersey;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + adidas.basketballJerseys[ch3-1] + "\t\(Adidas\)\t Rs." + to_string(adidas.basketballJerseyPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(adidas.basketballJerseyPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (adidas.basketballJerseyPrice[ch3-1]*quantity);
                        cout << order;
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }

            break;

            case 2:
                cout << "\nChoose your Jersey:\n" << endl;
                    displayProducts(nike.basketballJerseys, nike.basketballJerseyPrice, 2);
                    fflush(stdin);
                    jerseyNike:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto jerseyNike;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto jerseyNike;
                    }
                    quantityNikeJersey:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto quantityNikeJersey;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto quantityNikeJersey;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + nike.basketballJerseys[ch3-1] + "\t\(Nike\)\t Rs." + to_string(nike.basketballJerseyPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(nike.basketballJerseyPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (nike.basketballJerseyPrice[ch3-1]*quantity);
                        cout << order;
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }

            break;

            case 3:
                cout << "\nChoose your Jersey:\n" << endl;
                    displayProducts(puma.basketballJerseys, puma.basketballJerseyPrice, 3);
                    fflush(stdin);
                    jerseyPuma:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto jerseyPuma;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto jerseyPuma;
                    }
                    quantityPumaJersey:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto quantityPumaJersey;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto quantityPumaJersey;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + puma.basketballJerseys[ch3-1] + "\t\(Puma\)\t Rs." + to_string(puma.basketballJerseyPrice[ch3-1]) + "\t\t" + to_string(quantity) + "\t Rs."
                        + to_string(puma.basketballJerseyPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (puma.basketballJerseyPrice[ch3-1]*quantity);
                        cout << order;
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }

            break;

            case 4:
                cout << "\nChoose your Jersey:\n" << endl;
                    displayProducts(underarmour.basketballJerseys, underarmour.basketballJerseyPrice, 2);
                    fflush(stdin);
                    jerseyUnderArmour:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto jerseyUnderArmour;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto jerseyUnderArmour;
                    }
                    quantityUnderArmourJersey:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto quantityUnderArmourJersey;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto quantityUnderArmourJersey;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + underarmour.basketballJerseys[ch3-1] + "\t\(Under Armour\)\t Rs." + to_string(underarmour.basketballJerseyPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(underarmour.basketballJerseyPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (underarmour.basketballJerseyPrice[ch3-1]*quantity);
                        cout << order;
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }

            break;

            case 5:
                cout << "\nChoose your Jersey:\n" << endl;
                    displayProducts(spalding.basketballJerseys, spalding.basketballJerseyPrice, 2);
                    fflush(stdin);
                    jerseySpalding:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto jerseySpalding;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto jerseySpalding;
                    }
                    quantitySpaldingJersey:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto quantitySpaldingJersey;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto quantitySpaldingJersey;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + spalding.basketballJerseys[ch3-1] + "\t\(Spalding\)\t Rs." + to_string(spalding.basketballJerseyPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(spalding.basketballJerseyPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (spalding.basketballJerseyPrice[ch3-1]*quantity);
                        cout << order;
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }

            break;



            default:
                cout<<"Please enter a valid choice: ";
                goto jerseyBrands;
                break;

        }

    break;

    default:
        cout<< "Please choose a valid Product" << endl;
        goto main;
        break;
	}

}
void Customer::swimming()
{
    int ch1, ch2, ch3, pos, i, quantity;
	Adidas adidas;
	Nike nike;
	Speedo  speedo;
    main :
    cout << "\nWhat are you looking for?" << endl;
	cout << "1. Swimming Costume \n2. Swimming Cap \n3. Swimming Goggles" << endl;
	fflush(stdin);
	cout << "Enter your choice: ";
	cin >> ch1;
	if (cin.fail())
	{
		cin.clear();
		cin.ignore(200, '\n');
		cout << "\nPlease enter a number!" << endl;
		goto main;
	}
	switch(ch1)
	{
        case 1:
            cout << "\nBrands offering Swimming Costumes are:" << endl;
            cout << "1. Adidas \n2. Nike \n3. Speedo" << endl;
            costumeBrands:
            cout << "\nYour brand choice: ";
            fflush(stdin);
            cin >> ch2;
            if (cin.fail())
            {
                cin.clear();
                cin.ignore(200, '\n');
                cout << "\nPlease enter a number!" << endl;
                goto costumeBrands;
            }
            switch(ch2)
            {
                case 1:
                    cout << "\nChoose your Costume:\n" << endl;
                        displayProducts(adidas.swimmingCostumes, adidas.swimmingCostumePrice, 2);
                        fflush(stdin);
                        costumeAdidas:
                        cout << "\nEnter your choice: ";
                        cin >> ch3;
                        if (cin.fail())
                        {
                            cin.clear();
                            cin.ignore(200, '\n');
                            cout << "\nPlease enter a number!" << endl;
                            goto costumeAdidas;
                        }
                        if(!(ch3>=1 && ch3<=3))
                        {
                            cout << "\nInvalid choice, please choose a product." << endl;
                            goto costumeAdidas;
                        }
                        quantityAdidasCostume:
                        cout << "\nQuantity\(Enter 0 to cancel product\): ";
                        cin >> quantity;
                        if (cin.fail())
                        {
                            cin.clear();
                            cin.ignore(200, '\n');
                            cout << "\nPlease enter a number!" << endl;
                            goto quantityAdidasCostume;
                        }
                        if(quantity < 0)
                        {
                            cout << "\nInvalid quantity, please enter a whole number." << endl;
                            goto quantityAdidasCostume;
                        }
                        else if(quantity != 0)
                        {
                            order += to_string(itemCounter) + ". " + adidas.swimmingCostumes[ch3-1] + "\t\t\(Adidas\)\t Rs." + to_string(adidas.swimmingCostumePrice[ch3-1]) + "\t\t" + to_string(quantity) + "\t Rs."
                            + to_string(adidas.swimmingCostumePrice[ch3-1]*quantity) + "\n";
                            itemCounter++;
                            totalCost += (adidas.swimmingCostumePrice[ch3-1]*quantity);
                            cout << order;
                        }
                        else
                        {
                            cout << "\nProduct cancelled!" << endl;
                        }
                break;

                case 2:
                    cout << "\nChoose your Costume:\n" << endl;
                        displayProducts(nike.swimmingCostumes, nike.swimmingCostumePrice, 2);
                        fflush(stdin);
                        costumeNike:
                        cout << "\nEnter your choice: ";
                        cin >> ch3;
                        if (cin.fail())
                        {
                            cin.clear();
                            cin.ignore(200, '\n');
                            cout << "\nPlease enter a number!" << endl;
                            goto costumeNike;
                        }
                        if(!(ch3>=1 && ch3<=3))
                        {
                            cout << "\nInvalid choice, please choose a product." << endl;
                            goto costumeNike;
                        }
                        quantityNikeCostume:
                        cout << "\nQuantity\(Enter 0 to cancel product\): ";
                        cin >> quantity;
                        if (cin.fail())
                        {
                            cin.clear();
                            cin.ignore(200, '\n');
                            cout << "\nPlease enter a number!" << endl;
                            goto quantityNikeCostume;
                        }
                        if(quantity < 0)
                        {
                            cout << "\nInvalid quantity, please enter a whole number." << endl;
                            goto quantityNikeCostume;
                        }
                        else if(quantity != 0)
                        {
                            order += to_string(itemCounter) + ". " + nike.swimmingCostumes[ch3-1] + "\t\t\(Nike\)\t Rs." + to_string(nike.swimmingCostumePrice[ch3-1]) + "\t\t" + to_string(quantity) + "\t Rs."
                            + to_string(nike.swimmingCostumePrice[ch3-1]*quantity) + "\n";
                            itemCounter++;
                            totalCost += (nike.swimmingCostumePrice[ch3-1]*quantity);
                            cout << order;
                        }
                        else
                        {
                            cout << "\nProduct cancelled!" << endl;
                        }
                break;

                case 3:
                    cout << "\nChoose your Costume:\n" << endl;
                        displayProducts(speedo.swimmingCostumes, speedo.swimmingCostumePrice, 2);
                        fflush(stdin);
                        costumeSpeedo:
                        cout << "\nEnter your choice: ";
                        cin >> ch3;
                        if (cin.fail())
                        {
                            cin.clear();
                            cin.ignore(200, '\n');
                            cout << "\nPlease enter a number!" << endl;
                            goto costumeSpeedo;
                        }
                        if(!(ch3>=1 && ch3<=3))
                        {
                            cout << "\nInvalid choice, please choose a product." << endl;
                            goto costumeSpeedo;
                        }
                        quantitySpeedoCostume:
                        cout << "\nQuantity\(Enter 0 to cancel product\): ";
                        cin >> quantity;
                        if (cin.fail())
                        {
                            cin.clear();
                            cin.ignore(200, '\n');
                            cout << "\nPlease enter a number!" << endl;
                            goto quantitySpeedoCostume;
                        }
                        if(quantity < 0)
                        {
                            cout << "\nInvalid quantity, please enter a whole number." << endl;
                            goto quantitySpeedoCostume;
                        }
                        else if(quantity != 0)
                        {
                            order += to_string(itemCounter) + ". " + speedo.swimmingCostumes[ch3-1] + "\t\t\(Speedo\)\t Rs." + to_string(speedo.swimmingCostumePrice[ch3-1]) + "\t\t" + to_string(quantity) + "\t Rs."
                            + to_string(speedo.swimmingCostumePrice[ch3-1]*quantity) + "\n";
                            itemCounter++;
                            totalCost += (speedo.swimmingCostumePrice[ch3-1]*quantity);
                            cout << order;
                        }
                        else
                        {
                            cout << "\nProduct cancelled!" << endl;
                        }
                break;


                default:
                    cout << "Enter a valid number: "<<endl;
                    goto costumeBrands;
                    break;

            }

        break;

        case 2:
            cout << "\nBrands offering Swimming Caps are:" << endl;
            cout << "1. Adidas \n2. Nike \n3. Speedo" << endl;
            capBrands:
            cout << "\nYour brand choice: ";
            fflush(stdin);
            cin >> ch2;
            if (cin.fail())
            {
                cin.clear();
                cin.ignore(200, '\n');
                cout << "\nPlease enter a number!" << endl;
                goto capBrands;
            }
            switch(ch2)
            {
                case 1:
                    cout << "\nChoose your Cap:\n" << endl;
                        displayProducts(adidas.swimmingCap, adidas.swimmingCapPrice, 1);
                        fflush(stdin);
                        capAdidas:
                        cout << "\nEnter your choice: ";
                        cin >> ch3;
                        if (cin.fail())
                        {
                            cin.clear();
                            cin.ignore(200, '\n');
                            cout << "\nPlease enter a number!" << endl;
                            goto capAdidas;
                        }
                        if(!(ch3>=1 && ch3<=3))
                        {
                            cout << "\nInvalid choice, please choose a product." << endl;
                            goto capAdidas;
                        }
                        quantityAdidasCap:
                        cout << "\nQuantity\(Enter 0 to cancel product\): ";
                        cin >> quantity;
                        if (cin.fail())
                        {
                            cin.clear();
                            cin.ignore(200, '\n');
                            cout << "\nPlease enter a number!" << endl;
                            goto quantityAdidasCap;
                        }
                        if(quantity < 0)
                        {
                            cout << "\nInvalid quantity, please enter a whole number." << endl;
                            goto quantityAdidasCap;
                        }
                        else if(quantity != 0)
                        {
                            order += to_string(itemCounter) + ". " + adidas.swimmingCap[ch3-1] + "\t\t\(Adidas\)\t Rs." + to_string(adidas.swimmingCapPrice[ch3-1]) + "\t\t" + to_string(quantity) + "\t Rs."
                            + to_string(adidas.swimmingCapPrice[ch3-1]*quantity) + "\n";
                            itemCounter++;
                            totalCost += (adidas.swimmingCapPrice[ch3-1]*quantity);
                            cout << order;
                        }
                        else
                        {
                            cout << "\nProduct cancelled!" << endl;
                        }
                break;

                case 2:
                     cout << "\nChoose your Cap:\n" << endl;
                        displayProducts(nike.swimmingCap, nike.swimmingCapPrice, 1);
                        fflush(stdin);
                        capNike:
                        cout << "\nEnter your choice: ";
                        cin >> ch3;
                        if (cin.fail())
                        {
                            cin.clear();
                            cin.ignore(200, '\n');
                            cout << "\nPlease enter a number!" << endl;
                            goto capNike;
                        }
                        if(!(ch3>=1 && ch3<=3))
                        {
                            cout << "\nInvalid choice, please choose a product." << endl;
                            goto capNike;
                        }
                        quantityNikeCap:
                        cout << "\nQuantity\(Enter 0 to cancel product\): ";
                        cin >> quantity;
                        if (cin.fail())
                        {
                            cin.clear();
                            cin.ignore(200, '\n');
                            cout << "\nPlease enter a number!" << endl;
                            goto quantityNikeCap;
                        }
                        if(quantity < 0)
                        {
                            cout << "\nInvalid quantity, please enter a whole number." << endl;
                            goto quantityNikeCap;
                        }
                        else if(quantity != 0)
                        {
                            order += to_string(itemCounter) + ". " + nike.swimmingCap[ch3-1] + "\t\t\(Nike\)\t Rs." + to_string(nike.swimmingCapPrice[ch3-1]) + "\t\t" + to_string(quantity) + "\t Rs."
                            + to_string(nike.swimmingCapPrice[ch3-1]*quantity) + "\n";
                            itemCounter++;
                            totalCost += (nike.swimmingCapPrice[ch3-1]*quantity);
                            cout << order;
                        }
                        else
                        {
                            cout << "\nProduct cancelled!" << endl;
                        }
                break;

                case 3:
                     cout << "\nChoose your Cap:\n" << endl;
                        displayProducts(speedo.swimmingCap, speedo.swimmingCapPrice, 1);
                        fflush(stdin);
                        capSpeedo:
                        cout << "\nEnter your choice: ";
                        cin >> ch3;
                        if (cin.fail())
                        {
                            cin.clear();
                            cin.ignore(200, '\n');
                            cout << "\nPlease enter a number!" << endl;
                            goto capSpeedo;
                        }
                        if(!(ch3>=1 && ch3<=3))
                        {
                            cout << "\nInvalid choice, please choose a product." << endl;
                            goto capSpeedo;
                        }
                        quantitySpeedoCap:
                        cout << "\nQuantity\(Enter 0 to cancel product\): ";
                        cin >> quantity;
                        if (cin.fail())
                        {
                            cin.clear();
                            cin.ignore(200, '\n');
                            cout << "\nPlease enter a number!" << endl;
                            goto quantitySpeedoCap;
                        }
                        if(quantity < 0)
                        {
                            cout << "\nInvalid quantity, please enter a whole number." << endl;
                            goto quantitySpeedoCap;
                        }
                        else if(quantity != 0)
                        {
                            order += to_string(itemCounter) + ". " + speedo.swimmingCap[ch3-1] + "\t\t\(Speedo\)\t Rs." + to_string(speedo.swimmingCapPrice[ch3-1]) + "\t\t" + to_string(quantity) + "\t Rs."
                            + to_string(speedo.swimmingCapPrice[ch3-1]*quantity) + "\n";
                            itemCounter++;
                            totalCost += (speedo.swimmingCapPrice[ch3-1]*quantity);
                            cout << order;
                        }
                        else
                        {
                            cout << "\nProduct cancelled!" << endl;
                        }
                break;
                default:
                    cout<<"Enter a valid choice: \n\n";
                    goto capBrands;
                    break;

            }

        break;

        case 3:
            cout << "\nBrands offering Swimming Goggles are:" << endl;
            cout << "1. Adidas \n2. Nike \n3. Speedo" << endl;
            goggleBrands:
            cout << "\nYour brand choice: ";
            fflush(stdin);
            cin >> ch2;
            if (cin.fail())
            {
                cin.clear();
                cin.ignore(200, '\n');
                cout << "\nPlease enter a number!" << endl;
                goto goggleBrands;
            }
            switch(ch2)
            {
                case 1:
                    cout << "\nChoose your Goggle:\n" << endl;
                        displayProducts(adidas.swimmingGoggles, adidas.swimmingGogglePrice, 1);
                        fflush(stdin);
                        goggleAdidas:
                        cout << "\nEnter your choice: ";
                        cin >> ch3;
                        if (cin.fail())
                        {
                            cin.clear();
                            cin.ignore(200, '\n');
                            cout << "\nPlease enter a number!" << endl;
                            goto goggleAdidas;
                        }
                        if(!(ch3>=1 && ch3<=3))
                        {
                            cout << "\nInvalid choice, please choose a product." << endl;
                            goto goggleAdidas;
                        }
                        quantityAdidasGoggle:
                        cout << "\nQuantity\(Enter 0 to cancel product\): ";
                        cin >> quantity;
                        if (cin.fail())
                        {
                            cin.clear();
                            cin.ignore(200, '\n');
                            cout << "\nPlease enter a number!" << endl;
                            goto quantityAdidasGoggle;
                        }
                        if(quantity < 0)
                        {
                            cout << "\nInvalid quantity, please enter a whole number." << endl;
                            goto quantityAdidasGoggle;
                        }
                        else if(quantity != 0)
                        {
                            order += to_string(itemCounter) + ". " + adidas.swimmingGoggles[ch3-1] + "\t\t\(Adidas\)\t Rs." + to_string(adidas.swimmingGogglePrice[ch3-1]) + "\t\t" + to_string(quantity) + "\t Rs."
                            + to_string(adidas.swimmingGogglePrice[ch3-1]*quantity) + "\n";
                            itemCounter++;
                            totalCost += (adidas.swimmingGogglePrice[ch3-1]*quantity);
                            cout << order;
                        }
                        else
                        {
                            cout << "\nProduct cancelled!" << endl;
                        }
                break;

                case 2:
                     cout << "\nChoose your Goggle:\n" << endl;
                        displayProducts(nike.swimmingGoggles, nike.swimmingGogglePrice, 1);
                        fflush(stdin);
                        goggleNike:
                        cout << "\nEnter your choice: ";
                        cin >> ch3;
                        if (cin.fail())
                        {
                            cin.clear();
                            cin.ignore(200, '\n');
                            cout << "\nPlease enter a number!" << endl;
                            goto goggleNike;
                        }
                        if(!(ch3>=1 && ch3<=3))
                        {
                            cout << "\nInvalid choice, please choose a product." << endl;
                            goto goggleNike;
                        }
                        quantityNikeGoggle:
                        cout << "\nQuantity\(Enter 0 to cancel product\): ";
                        cin >> quantity;
                        if (cin.fail())
                        {
                            cin.clear();
                            cin.ignore(200, '\n');
                            cout << "\nPlease enter a number!" << endl;
                            goto quantityNikeGoggle;
                        }
                        if(quantity < 0)
                        {
                            cout << "\nInvalid quantity, please enter a whole number." << endl;
                            goto quantityNikeGoggle;
                        }
                        else if(quantity != 0)
                        {
                            order += to_string(itemCounter) + ". " + nike.swimmingGoggles[ch3-1] + "\t\t\(Nike\)\t Rs." + to_string(nike.swimmingGogglePrice[ch3-1]) + "\t\t" + to_string(quantity) + "\t Rs."
                            + to_string(nike.swimmingGogglePrice[ch3-1]*quantity) + "\n";
                            itemCounter++;
                            totalCost += (nike.swimmingGogglePrice[ch3-1]*quantity);
                            cout << order;
                        }
                        else
                        {
                            cout << "\nProduct cancelled!" << endl;
                        }
                break;

                case 3:
                     cout << "\nChoose your Goggle:\n" << endl;
                        displayProducts(speedo.swimmingGoggles, speedo.swimmingGogglePrice, 1);
                        fflush(stdin);
                        goggleSpeedo:
                        cout << "\nEnter your choice: ";
                        cin >> ch3;
                        if (cin.fail())
                        {
                            cin.clear();
                            cin.ignore(200, '\n');
                            cout << "\nPlease enter a number!" << endl;
                            goto goggleSpeedo;
                        }
                        if(!(ch3>=1 && ch3<=3))
                        {
                            cout << "\nInvalid choice, please choose a product." << endl;
                            goto goggleSpeedo;
                        }
                        quantitySpeedoGoggle:
                        cout << "\nQuantity\(Enter 0 to cancel product\): ";
                        cin >> quantity;
                        if (cin.fail())
                        {
                            cin.clear();
                            cin.ignore(200, '\n');
                            cout << "\nPlease enter a number!" << endl;
                            goto quantitySpeedoGoggle;
                        }
                        if(quantity < 0)
                        {
                            cout << "\nInvalid quantity, please enter a whole number." << endl;
                            goto quantitySpeedoGoggle;
                        }
                        else if(quantity != 0)
                        {
                            order += to_string(itemCounter) + ". " + speedo.swimmingGoggles[ch3-1] + "\t\t\(Speedo\)\t Rs." + to_string(speedo.swimmingGogglePrice[ch3-1]) + "\t\t" + to_string(quantity) + "\t Rs."
                            + to_string(speedo.swimmingGogglePrice[ch3-1]*quantity) + "\n";
                            itemCounter++;
                            totalCost += (speedo.swimmingGogglePrice[ch3-1]*quantity);
                            cout << order;
                        }
                        else
                        {
                            cout << "\nProduct cancelled!" << endl;
                        }
                break;



                default:
                    cout << "Enter a valid choice" <<endl;
                    goto goggleBrands;

            }

        break;


        default:
            cout<<"Please choose a valid product" <<endl;
            goto main;
        break;

	}


}

void Customer::tt()
{
int ch1, ch2, ch3, pos, i, quantity;
Butterfly butterfly;
Stiga stiga;
Artengo artengo;

main :

cout << "\nWhat are you looking for?" << endl;
cout << "1. Rackets\n2. Table\n3. Balls(Pack of 6)\n4. Set(Rackets and Balls)" << endl;
fflush(stdin);
cout << "Enter your choice: ";
cin >> ch1;
if (cin.fail())
{
cin.clear();
cin.ignore(200, '\n');
cout << "\nPlease enter a number!" << endl;
goto main;
}

switch (ch1)
{
        case 1:
            cout << "\nBrands offering Rackets are:" << endl;
            cout << "1. Butterfly\n2. Stiga\n3. Artengo" << endl;
            racketBrands:
            cout << "\nYour brand choice: ";
            fflush(stdin);
            cin >> ch2;
            if (cin.fail())
            {
                cin.clear();
                cin.ignore(200, '\n');
                cout << "\nPlease enter a number!" << endl;
                goto racketBrands;
            }

            switch (ch2)
            {
                case 1:
                    cout << "\nChoose your racket:\n" << endl;
                    displayProducts(butterfly.rackets, butterfly.racketPrice, 2);
                    fflush(stdin);
                    racketsButterfly:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto racketsButterfly;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto racketsButterfly;
                    }
                    quantityButterfly:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto quantityButterfly;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto quantityButterfly;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + butterfly.rackets[ch3-1] + "\t\(Yonex\)\t Rs." + to_string(butterfly.racketPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(butterfly.racketPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (butterfly.racketPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                  case 2:
                  cout << "\nChoose your racket:\n" << endl;
                    displayProducts(stiga.rackets, stiga.racketPrice, 2);
                    fflush(stdin);
                    racketsStiga:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto racketsStiga;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto racketsStiga;
                    }
                    quantityStiga:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto quantityStiga;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto quantityStiga;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + stiga.rackets[ch3-1] + "\t\(Stiga\)\t Rs." + to_string(stiga.racketPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(stiga.racketPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (stiga.racketPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 3:
                    cout << "\nChoose your racket:\n" << endl;
                    displayProducts(artengo.rackets, artengo.racketPrice, 2);
                    fflush(stdin);
                    racketsArtengo:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto racketsArtengo;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto racketsArtengo;
                    }
                    quantityArtengo:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto quantityArtengo;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto quantityArtengo;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + artengo.rackets[ch3-1] + "\t\(Artengo\)\t Rs." + to_string(artengo.racketPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(artengo.racketPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (artengo.racketPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                default:
                    cout << "\nInvalid choice, please choose a brand." << endl;
                    goto racketBrands;
                break;
            }
        break;
        case 2:
            cout << "\nBrands offering tables are:" << endl;
            cout << "1. Butterfly\n2. Stiga\n3. Artengo" << endl;
            tableBrands:
            cout << "\nYour brand choice: ";
            fflush(stdin);
            cin >> ch2;
            if (cin.fail())
            {
                cin.clear();
                cin.ignore(200, '\n');
                cout << "\nPlease enter a number!" << endl;
                goto tableBrands;
            }

            switch (ch2)
            {
                case 1:
                    cout << "\nChoose your table:\n" << endl;
                    displayProducts(butterfly.table, butterfly.tablePrice, 1);
                    fflush(stdin);
                    tableButterfly:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto tableButterfly;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto tableButterfly;
                    }
                    tablequantityButterfly:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto tablequantityButterfly;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto tablequantityButterfly;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + butterfly.table[ch3-1] + "\t\(Butterfly\)\t Rs." + to_string(butterfly.tablePrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(butterfly.tablePrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (butterfly.tablePrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 2:
                    cout << "\nChoose your table:\n" << endl;
                    displayProducts(stiga.table, stiga.tablePrice, 1);
                    fflush(stdin);
                    tableStiga:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto tableStiga;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto tableStiga;
                    }
                    tablequantityStiga:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto tablequantityStiga;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto tablequantityStiga;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + stiga.table[ch3-1] + "\t\(Stiga\)\t Rs." + to_string(stiga.tablePrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(stiga.tablePrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (stiga.tablePrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 3:
                    cout << "\nChoose your table:\n" << endl;
                    displayProducts(artengo.table, artengo.tablePrice, 1);
                    fflush(stdin);
                    tableArtengo:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto tableArtengo;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto tableArtengo;
                    }
                    tablequantityArtengo:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto tablequantityArtengo;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto tablequantityArtengo;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + artengo.table[ch3-1] + "\t\(Artengo\)\t Rs." + to_string(artengo.tablePrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(artengo.tablePrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (artengo.tablePrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                default:
                    cout << "\nInvalid choice, please choose a brand." << endl;
                    goto tableBrands;
                break;
            }
       break;





       case 3:
            cout << "\nBrands offering balls are:" << endl;
            cout << "1. Butterfly\n2. Stiga\n3. Artengo" << endl;
            ballsBrands:
            cout << "\nYour brand choice: ";
            fflush(stdin);
            cin >> ch2;
            if (cin.fail())
            {
                cin.clear();
                cin.ignore(200, '\n');
                cout << "\nPlease enter a number!" << endl;
                goto ballsBrands;
            }

            switch (ch2)
            {
                case 1:
                    cout << "\nChoose balls(pack of 6):\n" << endl;
                    displayProducts(butterfly.balls, butterfly.ballPrice, 1);
                    fflush(stdin);
                    ballsButterfly:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto ballsButterfly;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto ballsButterfly;
                    }
                    ballsquantityButterfly:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto ballsquantityButterfly;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto ballsquantityButterfly;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + butterfly.balls[ch3-1] + "\t\(Butterfly\)\t Rs." + to_string(butterfly.ballPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(butterfly.ballPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (butterfly.ballPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 2:
                    cout << "\nChoose balls(pack of 6):\n" << endl;
                    displayProducts(stiga.balls, stiga.ballPrice, 1);
                    fflush(stdin);
                    ballsStiga:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto ballsStiga;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto ballsStiga;
                    }
                    ballsquantityStiga:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto ballsquantityStiga;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto ballsquantityStiga;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + stiga.balls[ch3-1] + "\t\(Stiga\)\t Rs." + to_string(stiga.ballPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(stiga.ballPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (stiga.ballPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 3:
                    cout << "\nChoose balls(pack of 6):\n" << endl;
                    displayProducts(artengo.balls, artengo.ballPrice, 1);
                    fflush(stdin);
                    ballsArtengo:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto ballsArtengo;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto ballsArtengo;
                    }
                    ballsquantityArtengo:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto ballsquantityArtengo;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto ballsquantityArtengo;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + artengo.balls[ch3-1] + "\t\(Artengo\)\t Rs." + to_string(artengo.ballPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(artengo.ballPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (artengo.ballPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                default:
                    cout << "\nInvalid choice, please choose a brand." << endl;
                    goto ballsBrands;
                break;
            }
       break;






       case 4:
            cout << "\nBrands offering sets are:" << endl;
            cout << "1. Butterfly\n2. Stiga\n3. Artengo" << endl;
            setsBrands:
            cout << "\nYour brand choice: ";
            fflush(stdin);
            cin >> ch2;
            if (cin.fail())
            {
                cin.clear();
                cin.ignore(200, '\n');
                cout << "\nPlease enter a number!" << endl;
                goto setsBrands;
            }

            switch (ch2)
            {
                case 1:
                    cout << "\nChoose your set:\n" << endl;
                    displayProducts(butterfly.Set, butterfly.setPrice, 1);
                    fflush(stdin);
                    setsButterfly:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto setsButterfly;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto setsButterfly;
                    }
                    setsquantityButterfly:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto setsquantityButterfly;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto setsquantityButterfly;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " +  butterfly.Set[ch3-1] + "\t\(Butterfly\)\t Rs." + to_string( butterfly.setPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string( butterfly.setPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += ( butterfly.setPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 2:
                    cout << "\nChoose your set:\n" << endl;
                    displayProducts(stiga.Set, stiga.setPrice, 1);
                    fflush(stdin);
                    setsStiga:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto setsStiga;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto setsStiga;
                    }
                    setsquantityStiga:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto setsquantityStiga;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto setsquantityStiga;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + stiga.Set[ch3-1] + "\t\(Stiga\)\t Rs." + to_string(stiga.setPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(stiga.setPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (stiga.setPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 3:
                    cout << "\nChoose balls(pack of 6):\n" << endl;
                    displayProducts(artengo.Set, artengo.setPrice, 1);
                    fflush(stdin);
                    setsArtengo:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto ballsArtengo;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto setsArtengo;
                    }
                    setsquantityArtengo:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto setsquantityArtengo;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto setsquantityArtengo;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + artengo.Set[ch3-1] + "\t\(Artengo\)\t Rs." + to_string(artengo.setPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(artengo.setPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (artengo.setPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                default:
                    cout << "\nInvalid choice, please choose a brand." << endl;
                    goto setsBrands;
                break;
            }
       break;
}
}

void Customer::badminton()
{
int ch1, ch2, ch3, pos, i, quantity;
Yonex yonex;
Lining lining;
Fleet fleet;

main :

cout << "\nWhat are you looking for?" << endl;
cout << "1. Rackets\n2. Shuttle Cock(Pack of 6)\n3. Set(Rackets and Shuttle Cocks)" << endl;
fflush(stdin);
cout << "Enter your choice: ";
cin >> ch1;
if (cin.fail())
{
cin.clear();
cin.ignore(200, '\n');
cout << "\nPlease enter a number!" << endl;
goto main;
}

switch (ch1)
{
        case 1:
            cout << "\nBrands offering Rackets are:" << endl;
            cout << "1. Yonex\n2. Lining\n3. Fleet" << endl;
            badmintonracketBrands:
            cout << "\nYour brand choice: ";
            fflush(stdin);
            cin >> ch2;
            if (cin.fail())
            {
                cin.clear();
                cin.ignore(200, '\n');
                cout << "\nPlease enter a number!" << endl;
                goto badmintonracketBrands;
            }

            switch (ch2)
            {
                case 1:
                    cout << "\nChoose your racket:\n" << endl;
                    displayProducts(yonex.rackets, yonex.racketPrice, 3);
                    fflush(stdin);
                    racketsYonex:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto racketsYonex;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto racketsYonex;
                    }
                    quantityYonex:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto quantityYonex;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto quantityYonex;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + yonex.rackets[ch3-1] + "\t\(Yonex\)\t Rs." + to_string(yonex.racketPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(yonex.racketPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (yonex.racketPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                  case 2:
                  cout << "\nChoose your racket:\n" << endl;
                    displayProducts(lining.rackets, lining.racketPrice, 3);
                    fflush(stdin);
                    racketsLining:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto racketsLining;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto racketsLining;
                    }
                    quantityLining:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto quantityLining;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto quantityLining;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + lining.rackets[ch3-1] + "\t\(Lining\)\t Rs." + to_string(lining.racketPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(lining.racketPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (lining.racketPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 3:
                    cout << "\nChoose your racket:\n" << endl;
                    displayProducts(fleet.rackets, fleet.racketPrice, 2);
                    fflush(stdin);
                    racketsFleet:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto racketsFleet;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto racketsFleet;
                    }
                    quantityFleet:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto quantityFleet;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto quantityFleet;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + fleet.rackets[ch3-1] + "\t\(Fleet\)\t Rs." + to_string(fleet.racketPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(fleet.racketPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (fleet.racketPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                    default:
                    cout << "\nInvalid choice, please choose a brand." << endl;
                    goto badmintonracketBrands;
                break;
            }
        break;
        case 2:
            cout << "\nBrands offering stuttle cock (pack of 6) are:" << endl;
            cout << "1. Yonex\n2. Lining\n3. Fleet" << endl;
            shuttleBrands:
            cout << "\nYour brand choice: ";
            fflush(stdin);
            cin >> ch2;
            if (cin.fail())
            {
                cin.clear();
                cin.ignore(200, '\n');
                cout << "\nPlease enter a number!" << endl;
                goto shuttleBrands;
            }

            switch (ch2)
            {
                case 1:
                    cout << "\nChoose your shuttle:\n" << endl;
                    displayProducts(yonex.shuttle, yonex.shuttlePrice, 1);
                    fflush(stdin);
                    shuttleYonex:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto shuttleYonex;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto shuttleYonex;
                    }
                    shuttlequantityYonex:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto shuttlequantityYonex;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto shuttlequantityYonex;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + yonex.shuttle[ch3-1] + "\t\(Yonex\)\t Rs." + to_string(yonex.shuttlePrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(yonex.shuttlePrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (yonex.shuttlePrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 2:
                    cout << "\nChoose your shuttle:\n" << endl;
                    displayProducts(lining.shuttle, lining.shuttlePrice, 1);
                    fflush(stdin);
                    shuttleLining:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto shuttleLining;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto shuttleLining;
                    }
                    shuttlequantityLining:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto shuttlequantityLining;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto shuttlequantityLining;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + lining.shuttle[ch3-1] + "\t\(Lining\)\t Rs." + to_string(lining.shuttlePrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(lining.shuttlePrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (lining.shuttlePrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 3:
                    cout << "\nChoose your shuttle:\n" << endl;
                    displayProducts(fleet.shuttle, fleet.shuttlePrice, 1);
                    fflush(stdin);
                    shuttleFleet:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto shuttleFleet;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto shuttleFleet;
                    }
                    shuttlequantityFleet:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto shuttlequantityFleet;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto shuttlequantityFleet;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + fleet.shuttle[ch3-1] + "\t\(Fleet\)\t Rs." + to_string(fleet.shuttlePrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(fleet.shuttlePrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (fleet.shuttlePrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 4:

                default:
                    cout << "\nInvalid choice, please choose a brand." << endl;
                    goto shuttleBrands;
                break;
            }
       break;





       case 3:
       //ball
            cout << "\nBrands offering sets are:" << endl;
            cout << "1. Yonex\n2. Lining\n3. Fleet" << endl;
            setsBrands:
            cout << "\nYour brand choice: ";
            fflush(stdin);
            cin >> ch2;
            if (cin.fail())
            {
                cin.clear();
                cin.ignore(200, '\n');
                cout << "\nPlease enter a number!" << endl;
                goto setsBrands;
            }

            switch (ch2)
            {
                case 1:
                    cout << "\nChoose set(Rackets and Shuttle):\n" << endl;
                    displayProducts(yonex.Set, yonex.setPrice, 1);
                    fflush(stdin);
                    setYonex:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto setYonex;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto setYonex;
                    }
                    setsquantityYonex:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto setsquantityYonex;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto setsquantityYonex;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " +  yonex.Set[ch3-1] + "\t\(Yonex\)\t Rs." + to_string( yonex.setPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string( yonex.setPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += ( yonex.setPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 2:
                    cout << "\nChoose set(Rackets and Shuttle):\n" << endl;
                    displayProducts(lining.Set, lining.setPrice, 1);
                    fflush(stdin);
                    setLining:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto setLining;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto setLining;
                    }
                    setsquantityLining:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto setsquantityLining;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto setsquantityLining;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + lining.Set[ch3-1] + "\t\(Lining\)\t Rs." + to_string(lining.setPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(lining.setPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (lining.setPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                case 3:
                    cout << "\nChoose set(Rackets and Shuttle):\n" << endl;
                    displayProducts(fleet.Set, fleet.setPrice, 1);
                    fflush(stdin);
                    setFleet:
                    cout << "\nEnter your choice: ";
                    cin >> ch3;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto setFleet;
                    }
                    if(!(ch3>=1 && ch3<=3))
                    {
                        cout << "\nInvalid choice, please choose a product." << endl;
                        goto setFleet;
                    }
                    setsquantityFleet:
                    cout << "\nQuantity\(Enter 0 to cancel product\): ";
                    cin >> quantity;
                    if (cin.fail())
                    {
                        cin.clear();
                        cin.ignore(200, '\n');
                        cout << "\nPlease enter a number!" << endl;
                        goto setsquantityFleet;
                    }
                    if(quantity < 0)
                    {
                        cout << "\nInvalid quantity, please enter a whole number." << endl;
                        goto setsquantityFleet;
                    }
                    else if(quantity != 0)
                    {
                        order += to_string(itemCounter) + ". " + fleet.Set[ch3-1] + "\t\(Fleet\)\t Rs." + to_string(fleet.setPrice[ch3-1]) + "\t" + to_string(quantity) + "\t Rs."
                        + to_string(fleet.setPrice[ch3-1]*quantity) + "\n";
                        itemCounter++;
                        totalCost += (fleet.setPrice[ch3-1]*quantity);
                    }
                    else
                    {
                        cout << "\nProduct cancelled!" << endl;
                    }
                break;
                default:
                    cout << "\nInvalid choice, please choose a brand." << endl;
                    goto setsBrands;
                break;
            }
       break;

}
}

int main()
{
	Customer obj;
	obj.mainMenu();
}
